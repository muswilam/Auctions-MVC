@model BidViewModel

@{
    ViewBag.Title = "Index";
}

<div class="row">
    <div class="col-md-6">
        <h2>Product Name: @Model.Product.ProductName</h2>
    </div>
    <div class="col-md-6">
        <h2 class="text-danger">Price: @Model.Product.ActualPrice$</h2>
    </div>
</div>

<div id="bidProcess">
    <div class="row">
        <div class="col-md-6">
            <div id="bid">
                @{ Html.RenderAction("NewBid", "Bids", Model); }
            </div>
        </div>
        <div class="col-md-6">
            <div class="text-warning h3" id="counter"></div>
        </div>
    </div>
</div>

<div id="winnerBid" hidden>
    <div class="jumbotron">
        <h1>Winner is:</h1>
        <div class="row">
            <div class="col-md-6">
                <h2 id="winnerName"></h2>
            </div>
            <div class="col-md-6">
                <h2 id="winnerPrice"></h2>
            </div>
        </div>
    </div>
    <button type="button" class="btn btn-success" id="saveAuction">Save Auction</button>
</div>

<div id="bidsTable">
    @{Html.RenderAction("Listing", "Bids", new { productId = Model.Product.Id }); }
</div>

@section scripts
{
    <script>
        $("#addBid").click(function () {
            $.ajax({
                url: '@Url.Action("Bid", "Bids")',
                type: 'Post',
                data: $("#newBid").serialize()
            })
            .done(function (response) {
                if (response.success) {
                    $("#BidAmount").val('');
                    stopTimer();
                    timer();
                    GetBids();
                }
                else {
                    alert(response.message);
                }
            })
            .fail(function () {
                alert("Something went wrong!");
            })
        })

        function GetBids() {
            $.ajax({
                url: '@Url.Action("Listing", "Bids")',
                type: 'Get',
                data: {
                    productId: '@Model.Product.Id'
                }
            })
            .done(function (response) {
                $("#bidsTable").html(response);
            })
        }

        $("#saveAuction").click(function () {
            debugger;
            $.ajax({
                url: '@Url.Action("Save", "Auctions")',
                type: 'Post',
                data: {
                    WinnerName: $("#winnerName").text(),
                    ProductName: '@Model.Product.ProductName',
                    ProductActualPrice: '@Model.Product.ActualPrice',
                    WinnerPrice: $("#winnerPrice").text()
                }
            })
            .done(function (response) {
                if (response.success) {
                    window.location.href = "/Products/Create"
                } else {
                    alert(response.message);
                }
            })
            .fail(function () {
                alert("Something went wrong!");
            })
        })

        var timerValue;
        //Timer counter.
        function timer() {
            $(function () {
                var defaultTimer = 15, 
                    callback = function () {
                        // ajax call to get winner
                        $("#bidProcess").hide();
                        $.ajax({
                            url: '@Url.Action("WinnerBid", "Bids", new { productId = Model.Product.Id})',
                            type: 'Get'
                        })
                        .done(function (response) {
                            $("#winnerBid").show();
                            $("#winnerName").text(response.winnerName);
                            $("#winnerPrice").text(response.winnerPrice);
                        })
                    };

                var counter = 1,
                    match = document.location.href.match(/[\?|&]timer=(\d+)/i),
                    totalTime = match ? match[1] : defaultTimer;
                var s;
                timerValue = setInterval(function () {
                    if (totalTime != -1 && !isNaN(totalTime)) {
                        val = 'Time left: ' + (function () {
                            var m = Math.floor(totalTime / 60);
                            if (m < 10) {
                                return '0'.concat(m);
                            }
                            else {
                                return m;
                            }
                        })() + ':' + (function () {
                            s = totalTime % 60;
                            if (s < 10) {
                                return '0'.concat(s);
                            }
                            else {
                                return s;
                            }
                        })();

                        $('#counter').html(val);
                        totalTime--;
                    }
                    else {
                        window.clearInterval(timer);
                        timer = null;
                        callback();
                    }
                }, 1000);
            });
        }

        function stopTimer() {
            window.clearInterval(timerValue);
        }
    </script>
}
